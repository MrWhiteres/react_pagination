{"version":3,"sources":["components/GenereteComponents/GenereteComponents.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["GeneratePages","totalPages","currentPage","handlePageChange","pages","i","page","className","classNames","active","href","onClick","push","Pagination","total","perPage","onPageChange","useMemo","Math","ceil","pageNum","disabled","App","useState","setCurrentPage","setPerPage","items","from","to","numbers","n","getNumbers","map","perPageNum","length","useEffect","startIndex","lastIndex","min","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39d666d7.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const GeneratePages = (\n  totalPages:number,\n  currentPage:number,\n  handlePageChange:(pageNum:number) => void,\n) => {\n  const pages = [];\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    const page = (\n      <li\n        key={i}\n        className={classNames('page-item', { active: i === currentPage })}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${i}`}\n          onClick={() => handlePageChange(i)}\n        >\n          {i}\n        </a>\n      </li>\n    );\n\n    pages.push(page);\n  }\n\n  return pages;\n};\n\nexport default GeneratePages;\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { GeneratePages } from '../GenereteComponents';\n\ntype Props = {\n  total:number,\n  perPage:number,\n  currentPage:number;\n  onPageChange:(pageNum:number) => void;\n};\n\nexport const Pagination:React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const totalPages = useMemo(\n    () => Math.ceil(total / perPage), [total, perPage],\n  );\n\n  const handlePageChange = (pageNum:number) => {\n    onPageChange(pageNum);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {GeneratePages(totalPages, currentPage, handlePageChange)}\n      <li\n        className={\n          classNames('page-item', { disabled: currentPage === totalPages })\n        }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst generateItems = () => getNumbers(1, 42).map(n => `Item ${n}`);\n\nconst App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState('5');\n\n  const items = useMemo(() => generateItems(), []);\n\n  const perPageNum = +perPage;\n\n  const totalPages = useMemo(\n    () => Math.ceil(items.length / perPageNum), [items, perPageNum],\n  );\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage && page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(event.target.value);\n  };\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [perPage]);\n\n  const startIndex = currentPage * perPageNum - perPageNum;\n  const lastIndex = Math.min(startIndex + perPageNum, items.length);\n\n  const visibleItems = useMemo(\n    () => items.slice(startIndex, lastIndex), [items, startIndex, lastIndex],\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${lastIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={+perPage}\n        currentPage={+currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {visibleItems.map((item) => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}